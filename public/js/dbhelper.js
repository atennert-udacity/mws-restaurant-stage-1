class DBHelper{static get BACKEND_URL(){return"http://localhost:1337/restaurants"}static get _objectStore(){return"restaurants"}static get database(){if(DBHelper._database)return Promise.resolve(DBHelper._database);return new Promise((e,t)=>{const r=indexedDB.open("restaurant-reviews",1);r.onerror=(()=>t()),r.onupgradeneeded=(()=>{r.result.createObjectStore(DBHelper._objectStore,{keyPath:"id"}).createIndex("by-id","id")}),r.onsuccess=(t=>{DBHelper._database=r.result,e(DBHelper._database)})})}static getDbRestaurants(e){return DBHelper.database.then(t=>{const r=t.transaction(DBHelper._objectStore,"readonly").objectStore(DBHelper._objectStore);return e?r.getAll(~~e):r.getAll()}).then(e=>new Promise(t=>{e.onsuccess=(()=>t(e.result.map(e=>e.restaurant)))})).catch(()=>{console.warn(`encountered database problem when trying to find restaurant ${e}`)})}static setDbRestaurants(e){DBHelper.database.then(t=>{const r=t.transaction(DBHelper._objectStore,"readwrite").objectStore(DBHelper._objectStore);e.forEach(e=>{r.put({id:e.id,restaurant:e})})}).catch(()=>{console.warn(`encountered database problem when trying to set restaurants ${e}`)})}static fetchRestaurants(e,t=""){let r=e;DBHelper.getDbRestaurants(t).then(e=>{e&&e.length>0&&(r(null,e),r=(()=>{}))}).then(()=>fetch(`${DBHelper.BACKEND_URL}/${t}`)).then(e=>e.json()).then(e=>{Array.isArray(e)||(e=[e]),e.forEach(e=>{e.photograph?e.photograph=`${e.photograph}.jpg`:e.photograph="no-img.svg",e.photo_title=`${e.name} restaurant - ${e.neighborhood}`}),DBHelper.setDbRestaurants(e),r(null,e)}).catch(e=>{const t=`Request failed. ${e.message}`;r(t,null)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((r,a)=>{if(r)t(r,null);else{const r=a.find(t=>t.id==e);r?t(null,r):t("Restaurant does not exist",null)}},e)}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((r,a)=>{if(r)t(r,null);else{const r=a.filter(t=>t.cuisine_type==e);t(null,r)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((r,a)=>{if(r)t(r,null);else{const r=a.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchRestaurants((a,n)=>{if(a)r(a,null);else{let a=n;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),r(null,a)}})}static fetchNeighborhoods(e){DBHelper.getDbRestaurants().then(t=>{const r=t.map(e=>e.neighborhood),a=r.filter((e,t)=>r.indexOf(e)==t);e(null,a)}).catch(t=>e(t,null))}static fetchCuisines(e){DBHelper.getDbRestaurants().then(t=>{const r=t.map(e=>e.cuisine_type),a=r.filter((e,t)=>r.indexOf(e)===t);e(null,a)}).catch(t=>e(t,null))}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}